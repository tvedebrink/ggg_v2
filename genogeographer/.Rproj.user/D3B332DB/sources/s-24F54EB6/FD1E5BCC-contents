# N <- 177
# pct <- (1:100)/100
# proc <- seq_len(N)/N
# rle(floor(proc*100))

library(shiny)
library(shinyjs)
library(waiter)

ui <- fluidPage(
  useWaitress(),
  useShinyjs(),
  br(),
  actionButton(
    "load",
    "Load stuff"
  ),
  shinyjs::disabled(downloadButton(
    "dwnload",
    "Download"
  ))
)

hep_hep_frac <- function(n, .session){
  incProgressWaitress(100/n, session = .session)
  Sys.sleep(10/n)
}

hep_hep_fix <- function(trick = FALSE, n, .session){
  if(trick) incProgressWaitress(value = 1, session = .session)
  Sys.sleep(10/n)
}

hep_hep_1 <- function(n){
  incProgressWaitress(1)
  Sys.sleep(10/n)
}

hep_hep_session <- function(n, .session){
  incProgressWaitress(1, session = .session)
  Sys.sleep(10/n)
}

N <- 150

## transform so tricker only happens when 1% of calc has been completed?

server <- function(input, output, session) {

  output$dwnload <- downloadHandler(
    filename = function() {
      paste('data-', Sys.Date(), '.csv', sep='')
    },
    content = function(con) {
      write.csv(hit_me, con)
    }
  )

  observeEvent(input$load,{
    withProgressWaitress({
      for (i in 1:N) {
        hep_hep_fix(trick = floor(i*100/N) > floor((i-1)*100/N), n = N, .session = session)
      }
    }, selector = "#dwnload", max = N, theme = "overlay-percent")
    shinyjs::enable("dwnload")
    hit_me <<- mtcars
  })
}

shinyApp(ui, server)
